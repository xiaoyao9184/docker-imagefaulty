{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "docker: compose up.label@gpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up.label@gpu/"
            },
            "command": "docker compose -p image-faulty up"
        },
        {
            "label": "docker: compose up.gradio@gpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up.gradio@gpu/"
            },
            "command": "docker compose -p image-faulty up"
        },
        {
            "label": "docker: compose up.orts@gpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up.orts@gpu/"
            },
            "command": "docker compose -p image-faulty up"
        },
        {
            "label": "docker: compose up.orts@cpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up.orts@cpu/"
            },
            "command": "docker compose -p image-faulty up"
        },
        {
            "label": "docker: compose up@cpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up@cpu/"
            },
            "command": "docker compose -p image-faulty up"
        },
        {
            "label": "docker: build main",
            "type": "shell",
            "command": "docker build -t xiaoyao9184/image-faulty:main -f ./docker/build@source/dockerfile ."
        },
        {
            "label": "shell: models onnxruntime-server",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}",
            },
            "command": [
                "&& mkdir -p ./cache/onnxruntime-server/image-faulty/corner/v1/",
                "&& mkdir -p ./cache/onnxruntime-server/image-faulty/empty/v5_24_08_23/",
                "&& mkdir -p ./cache/onnxruntime-server/image-faulty/post_it/v1/",
                "&& mkdir -p ./cache/onnxruntime-server/image-faulty/writing_type/v1/",
                "&& ln -s ../../../../huggingface/hub/models--xiaoyao9184--image-faulty/snapshots/3bc9ba7f84a5d8359a34ef3a7d5e9f6bec349d91/corner_model.onnx ./cache/onnxruntime-server/image-faulty/corner/v1/model.onnx",
                "&& ln -s ../../../../huggingface/hub/models--xiaoyao9184--image-faulty/snapshots/3bc9ba7f84a5d8359a34ef3a7d5e9f6bec349d91/empty_v5_24_08_23.onnx ./cache/onnxruntime-server/image-faulty/empty/v5_24_08_23/model.onnx",
                "&& ln -s ../../../../huggingface/hub/models--xiaoyao9184--image-faulty/snapshots/3bc9ba7f84a5d8359a34ef3a7d5e9f6bec349d91/post_it_model.onnx ./cache/onnxruntime-server/image-faulty/post_it/v1/model.onnx",
                "&& ln -s ../../../../huggingface/hub/models--xiaoyao9184--image-faulty/snapshots/3bc9ba7f84a5d8359a34ef3a7d5e9f6bec349d91/writing_type_v1.onnx ./cache/onnxruntime-server/image-faulty/writing_type/v1/model.onnx"
            ]
        },
        {
            "label": "huggingface-cli: models download",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    // "HF_ENDPOINT": "https://hf-mirror.com",
                    // "HF_HUB_ETAG_TIMEOUT": "1000",
                    // "HF_HUB_DOWNLOAD_TIMEOUT": "1000"
                }
            },
            "command": "huggingface-cli download --revision main --cache-dir ./cache/huggingface/hub xiaoyao9184/image-faulty"
        },
        {
            "label": "huggingface-cli: models upload",
            "type": "shell",
            "command": "huggingface-cli upload-large-folder --repo-type model --revision main xiaoyao9184/image-faulty ${workspaceFolder}/FaultyImageAPI/models",
        },
        {
            "label": "conda: flask run",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/FaultyImageAPI",
                "env": {
                }
            },
            "command": [
                "conda run --no-capture-output -n faulty_api_env flask --app api.py --debug run --port 5000"
            ],
            "problemMatcher": []
        },
        {
            "label": "conda: create env",
            "type": "shell",
            "command": [
                "conda env create -f ./environment.yml"
            ]
        }
    ]
}